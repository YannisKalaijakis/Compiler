Terminals unused in grammar

   DOUBLEDOT
   COMMENT_LINE
   INVALID_COMMENT
   SPACE


State 106 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts
    2        | %empty

    3 stmts: stmts stmt
    4      | stmt

    5 stmt: expr SEMICOLON
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK SEMICOLON
   11     | CONTINUE SEMICOLON
   12     | block
   13     | funcdef
   14     | SEMICOLON
   15     | COMMENT

   16 expr: assignexpr
   17     | expr PLUS expr
   18     | expr MINUS expr
   19     | expr MUL expr
   20     | expr DIV expr
   21     | expr MOD expr
   22     | expr GREATER expr
   23     | expr GREATER_EQUAL expr
   24     | expr LESS expr
   25     | expr LESS_EQUAL expr
   26     | expr EQUAL expr
   27     | expr NOTEQUAL expr
   28     | expr AND expr
   29     | expr OR expr
   30     | term
   31     | error ';'

   32 term: LEFTPAR expr RIGHTPAR
   33     | MINUS expr
   34     | NOT expr
   35     | PLUSPLUS lvalue
   36     | lvalue PLUSPLUS
   37     | MINUSMINUS lvalue
   38     | lvalue MINUSMINUS
   39     | primary

   40 assignexpr: lvalue ASSIGN expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | LEFTPAR funcdef RIGHTPAR
   45        | const

   46 lvalue: IDENTIFIER
   47       | _LOCAL_ IDENTIFIER
   48       | DOUBLECOLON IDENTIFIER
   49       | member

   50 tableItem: lvalue FULLSTOP IDENTIFIER
   51          | lvalue LEFTSQUARE expr RIGHTSQUARE

   52 member: tableItem
   53       | call FULLSTOP IDENTIFIER
   54       | call LEFTSQUARE expr RIGHTSQUARE

   55 call: call LEFTPAR elist RIGHTPAR
   56     | lvalue callsuffix
   57     | LEFTPAR funcdef RIGHTPAR LEFTPAR elist RIGHTPAR

   58 callsuffix: normcall
   59           | methodcall

   60 normcall: LEFTPAR elist RIGHTPAR

   61 methodcall: FULLSTOP FULLSTOP IDENTIFIER LEFTPAR elist RIGHTPAR

   62 elist: expr elistMore
   63      | %empty

   64 elistMore: COMA expr elistMore
   65          | %empty

   66 objectdef: LEFTSQUARE elist RIGHTSQUARE
   67          | LEFTSQUARE indexed RIGHTSQUARE

   68 indexed: indexedelem indexes

   69 indexes: COMA indexedelem indexes
   70        | %empty

   71 indexedelem: LEFTBRACKET expr COLON expr RIGHTBRACKET

   72 funcblockstart: %empty

   73 funcblockend: %empty

   74 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend

   75 funcname: IDENTIFIER
   76         | %empty

   77 funcprefix: _FUNCTION_ funcname

   78 $@1: %empty

   79 funcargs: LEFTPAR idlist $@1 RIGHTPAR

   80 $@2: %empty

   81 funcbody: $@2 block

   82 $@3: %empty

   83 block: LEFTBRACKET $@3 stmts RIGHTBRACKET

   84 $@4: %empty

   85 block: LEFTBRACKET $@4 RIGHTBRACKET

   86 const: INTEGER
   87      | REAL
   88      | STRING
   89      | NIL
   90      | _TRUE_
   91      | _FALSE_

   92 idlist: IDENTIFIER idlistMore
   93       | %empty

   94 idlistMore: COMA IDENTIFIER idlistMore
   95           | %empty

   96 ifprefix: IF LEFTPAR expr RIGHTPAR

   97 ifstmt: ifprefix stmt
   98       | ifprefix stmt elseprefix stmt

   99 elseprefix: ELSE

  100 N: %empty

  101 M: %empty

  102 loopstart: %empty

  103 loopend: %empty

  104 loopstmt: loopstart stmt loopend

  105 whilestart: WHILE

  106 whilestmt: whilestart whilecondition loopstmt

  107 whilecondition: LEFTPAR expr RIGHTPAR

  108 forstmt: forprefix N elist RIGHTPAR N loopstmt N

  109 forprefix: FOR LEFTPAR elist SEMICOLON M expr SEMICOLON

  110 returnstmt: RETURN expr SEMICOLON
  111           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
';' (59) 31
error (256) 31
IF (258) 96
ELSE (259) 99
WHILE (260) 105
FOR (261) 109
_FUNCTION_ (262) 77
RETURN (263) 110 111
BREAK (264) 10
CONTINUE (265) 11
_LOCAL_ (266) 47
_TRUE_ (267) 90
_FALSE_ (268) 91
NIL (269) 89
ASSIGN (270) 40
PLUS (271) 17
MINUS (272) 18 33
MUL (273) 19
DIV (274) 20
MOD (275) 21
EQUAL (276) 26
NOTEQUAL (277) 27
OR (278) 29
AND (279) 28
NOT (280) 34
PLUSPLUS (281) 35 36
MINUSMINUS (282) 37 38
GREATER (283) 22
LESS (284) 24
GREATER_EQUAL (285) 23
LESS_EQUAL (286) 25
LEFTBRACKET (287) 71 83 85
RIGHTBRACKET (288) 71 83 85
LEFTSQUARE (289) 51 54 66 67
RIGHTSQUARE (290) 51 54 66 67
FULLSTOP (291) 50 53 61
LEFTPAR (292) 32 44 55 57 60 61 79 96 107 109
RIGHTPAR (293) 32 44 55 57 60 61 79 96 107 108
SEMICOLON (294) 5 10 11 14 109 110 111
COMA (295) 64 69 94
DOUBLECOLON (296) 48
DOUBLEDOT (297)
COLON (298) 71
COMMENT_LINE (299)
COMMENT (300) 15
INVALID_COMMENT (301)
SPACE (302)
INTEGER (303) 86
REAL (304) 87
STRING (305) 88
IDENTIFIER (306) 46 47 48 50 53 61 75 92 94
UMINUS (307)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0
stmts (56)
    on left: 3 4, on right: 1 3 83
stmt (57)
    on left: 5 6 7 8 9 10 11 12 13 14 15, on right: 3 4 97 98 104
expr (58)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    5 17 18 19 20 21 22 23 24 25 26 27 28 29 32 33 34 40 51 54 62 64
    71 96 107 109 110
term (59)
    on left: 32 33 34 35 36 37 38 39, on right: 30
assignexpr (60)
    on left: 40, on right: 16
primary (61)
    on left: 41 42 43 44 45, on right: 39
lvalue (62)
    on left: 46 47 48 49, on right: 35 36 37 38 40 41 50 51 56
tableItem (63)
    on left: 50 51, on right: 52
member (64)
    on left: 52 53 54, on right: 49
call (65)
    on left: 55 56 57, on right: 42 53 54 55
callsuffix (66)
    on left: 58 59, on right: 56
normcall (67)
    on left: 60, on right: 58
methodcall (68)
    on left: 61, on right: 59
elist (69)
    on left: 62 63, on right: 55 57 60 61 66 108 109
elistMore (70)
    on left: 64 65, on right: 62 64
objectdef (71)
    on left: 66 67, on right: 43
indexed (72)
    on left: 68, on right: 67
indexes (73)
    on left: 69 70, on right: 68 69
indexedelem (74)
    on left: 71, on right: 68 69
funcblockstart (75)
    on left: 72, on right: 74
funcblockend (76)
    on left: 73, on right: 74
funcdef (77)
    on left: 74, on right: 13 44 57
funcname (78)
    on left: 75 76, on right: 77
funcprefix (79)
    on left: 77, on right: 74
funcargs (80)
    on left: 79, on right: 74
$@1 (81)
    on left: 78, on right: 79
funcbody (82)
    on left: 81, on right: 74
$@2 (83)
    on left: 80, on right: 81
block (84)
    on left: 83 85, on right: 12 81
$@3 (85)
    on left: 82, on right: 83
$@4 (86)
    on left: 84, on right: 85
const (87)
    on left: 86 87 88 89 90 91, on right: 45
idlist (88)
    on left: 92 93, on right: 79
idlistMore (89)
    on left: 94 95, on right: 92 94
ifprefix (90)
    on left: 96, on right: 97 98
ifstmt (91)
    on left: 97 98, on right: 6
elseprefix (92)
    on left: 99, on right: 98
N (93)
    on left: 100, on right: 108
M (94)
    on left: 101, on right: 109
loopstart (95)
    on left: 102, on right: 104
loopend (96)
    on left: 103, on right: 104
loopstmt (97)
    on left: 104, on right: 106 108
whilestart (98)
    on left: 105, on right: 106
whilestmt (99)
    on left: 106, on right: 7
whilecondition (100)
    on left: 107, on right: 106
forstmt (101)
    on left: 108, on right: 8
forprefix (102)
    on left: 109, on right: 108
returnstmt (103)
    on left: 110 111, on right: 9


State 0

    0 $accept: . program $end

    error        shift, and go to state 1
    IF           shift, and go to state 2
    WHILE        shift, and go to state 3
    FOR          shift, and go to state 4
    _FUNCTION_   shift, and go to state 5
    RETURN       shift, and go to state 6
    BREAK        shift, and go to state 7
    CONTINUE     shift, and go to state 8
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTBRACKET  shift, and go to state 17
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DOUBLECOLON  shift, and go to state 21
    COMMENT      shift, and go to state 22
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    $end  reduce using rule 2 (program)

    program     go to state 27
    stmts       go to state 28
    stmt        go to state 29
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    funcprefix  go to state 40
    block       go to state 41
    const       go to state 42
    ifprefix    go to state 43
    ifstmt      go to state 44
    whilestart  go to state 45
    whilestmt   go to state 46
    forstmt     go to state 47
    forprefix   go to state 48
    returnstmt  go to state 49


State 1

   31 expr: error . ';'

    ';'  shift, and go to state 50


State 2

   96 ifprefix: IF . LEFTPAR expr RIGHTPAR

    LEFTPAR  shift, and go to state 51


State 3

  105 whilestart: WHILE .

    $default  reduce using rule 105 (whilestart)


State 4

  109 forprefix: FOR . LEFTPAR elist SEMICOLON M expr SEMICOLON

    LEFTPAR  shift, and go to state 52


State 5

   77 funcprefix: _FUNCTION_ . funcname

    IDENTIFIER  shift, and go to state 53

    $default  reduce using rule 76 (funcname)

    funcname  go to state 54


State 6

  110 returnstmt: RETURN . expr SEMICOLON
  111           | RETURN . SEMICOLON

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    SEMICOLON    shift, and go to state 55
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 56
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 7

   10 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 8

   11 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 9

   47 lvalue: _LOCAL_ . IDENTIFIER

    IDENTIFIER  shift, and go to state 59


State 10

   90 const: _TRUE_ .

    $default  reduce using rule 90 (const)


State 11

   91 const: _FALSE_ .

    $default  reduce using rule 91 (const)


State 12

   89 const: NIL .

    $default  reduce using rule 89 (const)


State 13

   33 term: MINUS . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 60
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 14

   34 term: NOT . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 61
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 15

   35 term: PLUSPLUS . lvalue

    _LOCAL_      shift, and go to state 9
    LEFTPAR      shift, and go to state 62
    DOUBLECOLON  shift, and go to state 21
    IDENTIFIER   shift, and go to state 26

    lvalue     go to state 63
    tableItem  go to state 35
    member     go to state 36
    call       go to state 64


State 16

   37 term: MINUSMINUS . lvalue

    _LOCAL_      shift, and go to state 9
    LEFTPAR      shift, and go to state 62
    DOUBLECOLON  shift, and go to state 21
    IDENTIFIER   shift, and go to state 26

    lvalue     go to state 65
    tableItem  go to state 35
    member     go to state 36
    call       go to state 64


State 17

   83 block: LEFTBRACKET . $@3 stmts RIGHTBRACKET
   85      | LEFTBRACKET . $@4 RIGHTBRACKET

    RIGHTBRACKET  reduce using rule 84 ($@4)
    $default      reduce using rule 82 ($@3)

    $@3  go to state 66
    $@4  go to state 67


State 18

   66 objectdef: LEFTSQUARE . elist RIGHTSQUARE
   67          | LEFTSQUARE . indexed RIGHTSQUARE

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTBRACKET  shift, and go to state 68
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    RIGHTSQUARE  reduce using rule 63 (elist)

    expr         go to state 69
    term         go to state 31
    assignexpr   go to state 32
    primary      go to state 33
    lvalue       go to state 34
    tableItem    go to state 35
    member       go to state 36
    call         go to state 37
    elist        go to state 70
    objectdef    go to state 38
    indexed      go to state 71
    indexedelem  go to state 72
    const        go to state 42


State 19

   32 term: LEFTPAR . expr RIGHTPAR
   44 primary: LEFTPAR . funcdef RIGHTPAR
   57 call: LEFTPAR . funcdef RIGHTPAR LEFTPAR elist RIGHTPAR

    error        shift, and go to state 1
    _FUNCTION_   shift, and go to state 5
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 73
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 74
    funcprefix  go to state 40
    const       go to state 42


State 20

   14 stmt: SEMICOLON .

    $default  reduce using rule 14 (stmt)


State 21

   48 lvalue: DOUBLECOLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 75


State 22

   15 stmt: COMMENT .

    $default  reduce using rule 15 (stmt)


State 23

   86 const: INTEGER .

    $default  reduce using rule 86 (const)


State 24

   87 const: REAL .

    $default  reduce using rule 87 (const)


State 25

   88 const: STRING .

    $default  reduce using rule 88 (const)


State 26

   46 lvalue: IDENTIFIER .

    $default  reduce using rule 46 (lvalue)


State 27

    0 $accept: program . $end

    $end  shift, and go to state 76


State 28

    1 program: stmts .
    3 stmts: stmts . stmt

    error        shift, and go to state 1
    IF           shift, and go to state 2
    WHILE        shift, and go to state 3
    FOR          shift, and go to state 4
    _FUNCTION_   shift, and go to state 5
    RETURN       shift, and go to state 6
    BREAK        shift, and go to state 7
    CONTINUE     shift, and go to state 8
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTBRACKET  shift, and go to state 17
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DOUBLECOLON  shift, and go to state 21
    COMMENT      shift, and go to state 22
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    $end  reduce using rule 1 (program)

    stmt        go to state 77
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    funcprefix  go to state 40
    block       go to state 41
    const       go to state 42
    ifprefix    go to state 43
    ifstmt      go to state 44
    whilestart  go to state 45
    whilestmt   go to state 46
    forstmt     go to state 47
    forprefix   go to state 48
    returnstmt  go to state 49


State 29

    4 stmts: stmt .

    $default  reduce using rule 4 (stmts)


State 30

    5 stmt: expr . SEMICOLON
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    SEMICOLON      shift, and go to state 91


State 31

   30 expr: term .

    $default  reduce using rule 30 (expr)


State 32

   16 expr: assignexpr .

    $default  reduce using rule 16 (expr)


State 33

   39 term: primary .

    $default  reduce using rule 39 (term)


State 34

   36 term: lvalue . PLUSPLUS
   38     | lvalue . MINUSMINUS
   40 assignexpr: lvalue . ASSIGN expr
   41 primary: lvalue .
   50 tableItem: lvalue . FULLSTOP IDENTIFIER
   51          | lvalue . LEFTSQUARE expr RIGHTSQUARE
   56 call: lvalue . callsuffix

    ASSIGN      shift, and go to state 92
    PLUSPLUS    shift, and go to state 93
    MINUSMINUS  shift, and go to state 94
    LEFTSQUARE  shift, and go to state 95
    FULLSTOP    shift, and go to state 96
    LEFTPAR     shift, and go to state 97

    $default  reduce using rule 41 (primary)

    callsuffix  go to state 98
    normcall    go to state 99
    methodcall  go to state 100


State 35

   52 member: tableItem .

    $default  reduce using rule 52 (member)


State 36

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 37

   42 primary: call .
   53 member: call . FULLSTOP IDENTIFIER
   54       | call . LEFTSQUARE expr RIGHTSQUARE
   55 call: call . LEFTPAR elist RIGHTPAR

    LEFTSQUARE  shift, and go to state 101
    FULLSTOP    shift, and go to state 102
    LEFTPAR     shift, and go to state 103

    $default  reduce using rule 42 (primary)


State 38

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 39

   13 stmt: funcdef .

    $default  reduce using rule 13 (stmt)


State 40

   74 funcdef: funcprefix . funcargs funcblockstart funcbody funcblockend

    LEFTPAR  shift, and go to state 104

    funcargs  go to state 105


State 41

   12 stmt: block .

    $default  reduce using rule 12 (stmt)


State 42

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 43

   97 ifstmt: ifprefix . stmt
   98       | ifprefix . stmt elseprefix stmt

    error        shift, and go to state 1
    IF           shift, and go to state 2
    WHILE        shift, and go to state 3
    FOR          shift, and go to state 4
    _FUNCTION_   shift, and go to state 5
    RETURN       shift, and go to state 6
    BREAK        shift, and go to state 7
    CONTINUE     shift, and go to state 8
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTBRACKET  shift, and go to state 17
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DOUBLECOLON  shift, and go to state 21
    COMMENT      shift, and go to state 22
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    stmt        go to state 106
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    funcprefix  go to state 40
    block       go to state 41
    const       go to state 42
    ifprefix    go to state 43
    ifstmt      go to state 44
    whilestart  go to state 45
    whilestmt   go to state 46
    forstmt     go to state 47
    forprefix   go to state 48
    returnstmt  go to state 49


State 44

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 45

  106 whilestmt: whilestart . whilecondition loopstmt

    LEFTPAR  shift, and go to state 107

    whilecondition  go to state 108


State 46

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 47

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 48

  108 forstmt: forprefix . N elist RIGHTPAR N loopstmt N

    $default  reduce using rule 100 (N)

    N  go to state 109


State 49

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 50

   31 expr: error ';' .

    $default  reduce using rule 31 (expr)


State 51

   96 ifprefix: IF LEFTPAR . expr RIGHTPAR

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 110
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 52

  109 forprefix: FOR LEFTPAR . elist SEMICOLON M expr SEMICOLON

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    SEMICOLON  reduce using rule 63 (elist)

    expr        go to state 69
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 111
    objectdef   go to state 38
    const       go to state 42


State 53

   75 funcname: IDENTIFIER .

    $default  reduce using rule 75 (funcname)


State 54

   77 funcprefix: _FUNCTION_ funcname .

    $default  reduce using rule 77 (funcprefix)


State 55

  111 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 111 (returnstmt)


State 56

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
  110 returnstmt: RETURN expr . SEMICOLON

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    SEMICOLON      shift, and go to state 112


State 57

   10 stmt: BREAK SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 58

   11 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 59

   47 lvalue: _LOCAL_ IDENTIFIER .

    $default  reduce using rule 47 (lvalue)


State 60

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   33 term: MINUS expr .

    $default  reduce using rule 33 (term)


State 61

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   34 term: NOT expr .

    $default  reduce using rule 34 (term)


State 62

   57 call: LEFTPAR . funcdef RIGHTPAR LEFTPAR elist RIGHTPAR

    _FUNCTION_  shift, and go to state 5

    funcdef     go to state 113
    funcprefix  go to state 40


State 63

   35 term: PLUSPLUS lvalue .
   50 tableItem: lvalue . FULLSTOP IDENTIFIER
   51          | lvalue . LEFTSQUARE expr RIGHTSQUARE
   56 call: lvalue . callsuffix

    LEFTSQUARE  shift, and go to state 95
    FULLSTOP    shift, and go to state 96
    LEFTPAR     shift, and go to state 97

    $default  reduce using rule 35 (term)

    callsuffix  go to state 98
    normcall    go to state 99
    methodcall  go to state 100


State 64

   53 member: call . FULLSTOP IDENTIFIER
   54       | call . LEFTSQUARE expr RIGHTSQUARE
   55 call: call . LEFTPAR elist RIGHTPAR

    LEFTSQUARE  shift, and go to state 101
    FULLSTOP    shift, and go to state 102
    LEFTPAR     shift, and go to state 103


State 65

   37 term: MINUSMINUS lvalue .
   50 tableItem: lvalue . FULLSTOP IDENTIFIER
   51          | lvalue . LEFTSQUARE expr RIGHTSQUARE
   56 call: lvalue . callsuffix

    LEFTSQUARE  shift, and go to state 95
    FULLSTOP    shift, and go to state 96
    LEFTPAR     shift, and go to state 97

    $default  reduce using rule 37 (term)

    callsuffix  go to state 98
    normcall    go to state 99
    methodcall  go to state 100


State 66

   83 block: LEFTBRACKET $@3 . stmts RIGHTBRACKET

    error        shift, and go to state 1
    IF           shift, and go to state 2
    WHILE        shift, and go to state 3
    FOR          shift, and go to state 4
    _FUNCTION_   shift, and go to state 5
    RETURN       shift, and go to state 6
    BREAK        shift, and go to state 7
    CONTINUE     shift, and go to state 8
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTBRACKET  shift, and go to state 17
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DOUBLECOLON  shift, and go to state 21
    COMMENT      shift, and go to state 22
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    stmts       go to state 114
    stmt        go to state 29
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    funcprefix  go to state 40
    block       go to state 41
    const       go to state 42
    ifprefix    go to state 43
    ifstmt      go to state 44
    whilestart  go to state 45
    whilestmt   go to state 46
    forstmt     go to state 47
    forprefix   go to state 48
    returnstmt  go to state 49


State 67

   85 block: LEFTBRACKET $@4 . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 115


State 68

   71 indexedelem: LEFTBRACKET . expr COLON expr RIGHTBRACKET

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 116
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 69

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   62 elist: expr . elistMore

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    COMA           shift, and go to state 117

    $default  reduce using rule 65 (elistMore)

    elistMore  go to state 118


State 70

   66 objectdef: LEFTSQUARE elist . RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 119


State 71

   67 objectdef: LEFTSQUARE indexed . RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 120


State 72

   68 indexed: indexedelem . indexes

    COMA  shift, and go to state 121

    $default  reduce using rule 70 (indexes)

    indexes  go to state 122


State 73

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   32 term: LEFTPAR expr . RIGHTPAR

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    RIGHTPAR       shift, and go to state 123


State 74

   44 primary: LEFTPAR funcdef . RIGHTPAR
   57 call: LEFTPAR funcdef . RIGHTPAR LEFTPAR elist RIGHTPAR

    RIGHTPAR  shift, and go to state 124


State 75

   48 lvalue: DOUBLECOLON IDENTIFIER .

    $default  reduce using rule 48 (lvalue)


State 76

    0 $accept: program $end .

    $default  accept


State 77

    3 stmts: stmts stmt .

    $default  reduce using rule 3 (stmts)


State 78

   17 expr: expr PLUS . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 125
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 79

   18 expr: expr MINUS . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 126
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 80

   19 expr: expr MUL . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 127
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 81

   20 expr: expr DIV . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 128
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 82

   21 expr: expr MOD . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 129
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 83

   26 expr: expr EQUAL . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 130
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 84

   27 expr: expr NOTEQUAL . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 131
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 85

   29 expr: expr OR . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 132
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 86

   28 expr: expr AND . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 133
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 87

   22 expr: expr GREATER . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 134
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 88

   24 expr: expr LESS . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 135
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 89

   23 expr: expr GREATER_EQUAL . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 136
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 90

   25 expr: expr LESS_EQUAL . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 137
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 91

    5 stmt: expr SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 92

   40 assignexpr: lvalue ASSIGN . expr

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 138
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 93

   36 term: lvalue PLUSPLUS .

    $default  reduce using rule 36 (term)


State 94

   38 term: lvalue MINUSMINUS .

    $default  reduce using rule 38 (term)


State 95

   51 tableItem: lvalue LEFTSQUARE . expr RIGHTSQUARE

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 139
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 96

   50 tableItem: lvalue FULLSTOP . IDENTIFIER
   61 methodcall: FULLSTOP . FULLSTOP IDENTIFIER LEFTPAR elist RIGHTPAR

    FULLSTOP    shift, and go to state 140
    IDENTIFIER  shift, and go to state 141


State 97

   60 normcall: LEFTPAR . elist RIGHTPAR

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    RIGHTPAR  reduce using rule 63 (elist)

    expr        go to state 69
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 142
    objectdef   go to state 38
    const       go to state 42


State 98

   56 call: lvalue callsuffix .

    $default  reduce using rule 56 (call)


State 99

   58 callsuffix: normcall .

    $default  reduce using rule 58 (callsuffix)


State 100

   59 callsuffix: methodcall .

    $default  reduce using rule 59 (callsuffix)


State 101

   54 member: call LEFTSQUARE . expr RIGHTSQUARE

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 143
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 102

   53 member: call FULLSTOP . IDENTIFIER

    IDENTIFIER  shift, and go to state 144


State 103

   55 call: call LEFTPAR . elist RIGHTPAR

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    RIGHTPAR  reduce using rule 63 (elist)

    expr        go to state 69
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 145
    objectdef   go to state 38
    const       go to state 42


State 104

   79 funcargs: LEFTPAR . idlist $@1 RIGHTPAR

    IDENTIFIER  shift, and go to state 146

    $default  reduce using rule 93 (idlist)

    idlist  go to state 147


State 105

   74 funcdef: funcprefix funcargs . funcblockstart funcbody funcblockend

    $default  reduce using rule 72 (funcblockstart)

    funcblockstart  go to state 148


State 106

   97 ifstmt: ifprefix stmt .
   98       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 149

    ELSE      [reduce using rule 97 (ifstmt)]
    $default  reduce using rule 97 (ifstmt)

    elseprefix  go to state 150


State 107

  107 whilecondition: LEFTPAR . expr RIGHTPAR

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 151
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 108

  106 whilestmt: whilestart whilecondition . loopstmt

    $default  reduce using rule 102 (loopstart)

    loopstart  go to state 152
    loopstmt   go to state 153


State 109

  108 forstmt: forprefix N . elist RIGHTPAR N loopstmt N

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    RIGHTPAR  reduce using rule 63 (elist)

    expr        go to state 69
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 154
    objectdef   go to state 38
    const       go to state 42


State 110

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   96 ifprefix: IF LEFTPAR expr . RIGHTPAR

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    RIGHTPAR       shift, and go to state 155


State 111

  109 forprefix: FOR LEFTPAR elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 156


State 112

  110 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 110 (returnstmt)


State 113

   57 call: LEFTPAR funcdef . RIGHTPAR LEFTPAR elist RIGHTPAR

    RIGHTPAR  shift, and go to state 157


State 114

    3 stmts: stmts . stmt
   83 block: LEFTBRACKET $@3 stmts . RIGHTBRACKET

    error         shift, and go to state 1
    IF            shift, and go to state 2
    WHILE         shift, and go to state 3
    FOR           shift, and go to state 4
    _FUNCTION_    shift, and go to state 5
    RETURN        shift, and go to state 6
    BREAK         shift, and go to state 7
    CONTINUE      shift, and go to state 8
    _LOCAL_       shift, and go to state 9
    _TRUE_        shift, and go to state 10
    _FALSE_       shift, and go to state 11
    NIL           shift, and go to state 12
    MINUS         shift, and go to state 13
    NOT           shift, and go to state 14
    PLUSPLUS      shift, and go to state 15
    MINUSMINUS    shift, and go to state 16
    LEFTBRACKET   shift, and go to state 17
    RIGHTBRACKET  shift, and go to state 158
    LEFTSQUARE    shift, and go to state 18
    LEFTPAR       shift, and go to state 19
    SEMICOLON     shift, and go to state 20
    DOUBLECOLON   shift, and go to state 21
    COMMENT       shift, and go to state 22
    INTEGER       shift, and go to state 23
    REAL          shift, and go to state 24
    STRING        shift, and go to state 25
    IDENTIFIER    shift, and go to state 26

    stmt        go to state 77
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    funcprefix  go to state 40
    block       go to state 41
    const       go to state 42
    ifprefix    go to state 43
    ifstmt      go to state 44
    whilestart  go to state 45
    whilestmt   go to state 46
    forstmt     go to state 47
    forprefix   go to state 48
    returnstmt  go to state 49


State 115

   85 block: LEFTBRACKET $@4 RIGHTBRACKET .

    $default  reduce using rule 85 (block)


State 116

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   71 indexedelem: LEFTBRACKET expr . COLON expr RIGHTBRACKET

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    COLON          shift, and go to state 159


State 117

   64 elistMore: COMA . expr elistMore

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 160
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 118

   62 elist: expr elistMore .

    $default  reduce using rule 62 (elist)


State 119

   66 objectdef: LEFTSQUARE elist RIGHTSQUARE .

    $default  reduce using rule 66 (objectdef)


State 120

   67 objectdef: LEFTSQUARE indexed RIGHTSQUARE .

    $default  reduce using rule 67 (objectdef)


State 121

   69 indexes: COMA . indexedelem indexes

    LEFTBRACKET  shift, and go to state 68

    indexedelem  go to state 161


State 122

   68 indexed: indexedelem indexes .

    $default  reduce using rule 68 (indexed)


State 123

   32 term: LEFTPAR expr RIGHTPAR .

    $default  reduce using rule 32 (term)


State 124

   44 primary: LEFTPAR funcdef RIGHTPAR .
   57 call: LEFTPAR funcdef RIGHTPAR . LEFTPAR elist RIGHTPAR

    LEFTPAR  shift, and go to state 162

    $default  reduce using rule 44 (primary)


State 125

   17 expr: expr . PLUS expr
   17     | expr PLUS expr .
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    MUL  shift, and go to state 80
    DIV  shift, and go to state 81
    MOD  shift, and go to state 82

    $default  reduce using rule 17 (expr)


State 126

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   18     | expr MINUS expr .
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    MUL  shift, and go to state 80
    DIV  shift, and go to state 81
    MOD  shift, and go to state 82

    $default  reduce using rule 18 (expr)


State 127

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   19     | expr MUL expr .
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 128

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   20     | expr DIV expr .
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 129

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   21     | expr MOD expr .
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 130

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   26     | expr EQUAL expr .
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 131

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   27     | expr NOTEQUAL expr .
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 132

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   29     | expr OR expr .

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90

    $default  reduce using rule 29 (expr)


State 133

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   28     | expr AND expr .
   29     | expr . OR expr

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90

    $default  reduce using rule 28 (expr)


State 134

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   22     | expr GREATER expr .
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    MUL    shift, and go to state 80
    DIV    shift, and go to state 81
    MOD    shift, and go to state 82

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 135

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   24     | expr LESS expr .
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    MUL    shift, and go to state 80
    DIV    shift, and go to state 81
    MOD    shift, and go to state 82

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 136

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   23     | expr GREATER_EQUAL expr .
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    MUL    shift, and go to state 80
    DIV    shift, and go to state 81
    MOD    shift, and go to state 82

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 137

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   25     | expr LESS_EQUAL expr .
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    MUL    shift, and go to state 80
    DIV    shift, and go to state 81
    MOD    shift, and go to state 82

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 138

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   40 assignexpr: lvalue ASSIGN expr .

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90

    $default  reduce using rule 40 (assignexpr)


State 139

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   51 tableItem: lvalue LEFTSQUARE expr . RIGHTSQUARE

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    RIGHTSQUARE    shift, and go to state 163


State 140

   61 methodcall: FULLSTOP FULLSTOP . IDENTIFIER LEFTPAR elist RIGHTPAR

    IDENTIFIER  shift, and go to state 164


State 141

   50 tableItem: lvalue FULLSTOP IDENTIFIER .

    $default  reduce using rule 50 (tableItem)


State 142

   60 normcall: LEFTPAR elist . RIGHTPAR

    RIGHTPAR  shift, and go to state 165


State 143

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   54 member: call LEFTSQUARE expr . RIGHTSQUARE

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    RIGHTSQUARE    shift, and go to state 166


State 144

   53 member: call FULLSTOP IDENTIFIER .

    $default  reduce using rule 53 (member)


State 145

   55 call: call LEFTPAR elist . RIGHTPAR

    RIGHTPAR  shift, and go to state 167


State 146

   92 idlist: IDENTIFIER . idlistMore

    COMA  shift, and go to state 168

    $default  reduce using rule 95 (idlistMore)

    idlistMore  go to state 169


State 147

   79 funcargs: LEFTPAR idlist . $@1 RIGHTPAR

    $default  reduce using rule 78 ($@1)

    $@1  go to state 170


State 148

   74 funcdef: funcprefix funcargs funcblockstart . funcbody funcblockend

    $default  reduce using rule 80 ($@2)

    funcbody  go to state 171
    $@2       go to state 172


State 149

   99 elseprefix: ELSE .

    $default  reduce using rule 99 (elseprefix)


State 150

   98 ifstmt: ifprefix stmt elseprefix . stmt

    error        shift, and go to state 1
    IF           shift, and go to state 2
    WHILE        shift, and go to state 3
    FOR          shift, and go to state 4
    _FUNCTION_   shift, and go to state 5
    RETURN       shift, and go to state 6
    BREAK        shift, and go to state 7
    CONTINUE     shift, and go to state 8
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTBRACKET  shift, and go to state 17
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DOUBLECOLON  shift, and go to state 21
    COMMENT      shift, and go to state 22
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    stmt        go to state 173
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    funcprefix  go to state 40
    block       go to state 41
    const       go to state 42
    ifprefix    go to state 43
    ifstmt      go to state 44
    whilestart  go to state 45
    whilestmt   go to state 46
    forstmt     go to state 47
    forprefix   go to state 48
    returnstmt  go to state 49


State 151

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
  107 whilecondition: LEFTPAR expr . RIGHTPAR

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    RIGHTPAR       shift, and go to state 174


State 152

  104 loopstmt: loopstart . stmt loopend

    error        shift, and go to state 1
    IF           shift, and go to state 2
    WHILE        shift, and go to state 3
    FOR          shift, and go to state 4
    _FUNCTION_   shift, and go to state 5
    RETURN       shift, and go to state 6
    BREAK        shift, and go to state 7
    CONTINUE     shift, and go to state 8
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTBRACKET  shift, and go to state 17
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    SEMICOLON    shift, and go to state 20
    DOUBLECOLON  shift, and go to state 21
    COMMENT      shift, and go to state 22
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    stmt        go to state 175
    expr        go to state 30
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    funcdef     go to state 39
    funcprefix  go to state 40
    block       go to state 41
    const       go to state 42
    ifprefix    go to state 43
    ifstmt      go to state 44
    whilestart  go to state 45
    whilestmt   go to state 46
    forstmt     go to state 47
    forprefix   go to state 48
    returnstmt  go to state 49


State 153

  106 whilestmt: whilestart whilecondition loopstmt .

    $default  reduce using rule 106 (whilestmt)


State 154

  108 forstmt: forprefix N elist . RIGHTPAR N loopstmt N

    RIGHTPAR  shift, and go to state 176


State 155

   96 ifprefix: IF LEFTPAR expr RIGHTPAR .

    $default  reduce using rule 96 (ifprefix)


State 156

  109 forprefix: FOR LEFTPAR elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 101 (M)

    M  go to state 177


State 157

   57 call: LEFTPAR funcdef RIGHTPAR . LEFTPAR elist RIGHTPAR

    LEFTPAR  shift, and go to state 162


State 158

   83 block: LEFTBRACKET $@3 stmts RIGHTBRACKET .

    $default  reduce using rule 83 (block)


State 159

   71 indexedelem: LEFTBRACKET expr COLON . expr RIGHTBRACKET

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 178
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 160

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   64 elistMore: COMA expr . elistMore

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    COMA           shift, and go to state 117

    $default  reduce using rule 65 (elistMore)

    elistMore  go to state 179


State 161

   69 indexes: COMA indexedelem . indexes

    COMA  shift, and go to state 121

    $default  reduce using rule 70 (indexes)

    indexes  go to state 180


State 162

   57 call: LEFTPAR funcdef RIGHTPAR LEFTPAR . elist RIGHTPAR

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    RIGHTPAR  reduce using rule 63 (elist)

    expr        go to state 69
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 181
    objectdef   go to state 38
    const       go to state 42


State 163

   51 tableItem: lvalue LEFTSQUARE expr RIGHTSQUARE .

    $default  reduce using rule 51 (tableItem)


State 164

   61 methodcall: FULLSTOP FULLSTOP IDENTIFIER . LEFTPAR elist RIGHTPAR

    LEFTPAR  shift, and go to state 182


State 165

   60 normcall: LEFTPAR elist RIGHTPAR .

    $default  reduce using rule 60 (normcall)


State 166

   54 member: call LEFTSQUARE expr RIGHTSQUARE .

    $default  reduce using rule 54 (member)


State 167

   55 call: call LEFTPAR elist RIGHTPAR .

    $default  reduce using rule 55 (call)


State 168

   94 idlistMore: COMA . IDENTIFIER idlistMore

    IDENTIFIER  shift, and go to state 183


State 169

   92 idlist: IDENTIFIER idlistMore .

    $default  reduce using rule 92 (idlist)


State 170

   79 funcargs: LEFTPAR idlist $@1 . RIGHTPAR

    RIGHTPAR  shift, and go to state 184


State 171

   74 funcdef: funcprefix funcargs funcblockstart funcbody . funcblockend

    $default  reduce using rule 73 (funcblockend)

    funcblockend  go to state 185


State 172

   81 funcbody: $@2 . block

    LEFTBRACKET  shift, and go to state 17

    block  go to state 186


State 173

   98 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 98 (ifstmt)


State 174

  107 whilecondition: LEFTPAR expr RIGHTPAR .

    $default  reduce using rule 107 (whilecondition)


State 175

  104 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 103 (loopend)

    loopend  go to state 187


State 176

  108 forstmt: forprefix N elist RIGHTPAR . N loopstmt N

    $default  reduce using rule 100 (N)

    N  go to state 188


State 177

  109 forprefix: FOR LEFTPAR elist SEMICOLON M . expr SEMICOLON

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    expr        go to state 189
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 42


State 178

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
   71 indexedelem: LEFTBRACKET expr COLON expr . RIGHTBRACKET

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    RIGHTBRACKET   shift, and go to state 190


State 179

   64 elistMore: COMA expr elistMore .

    $default  reduce using rule 64 (elistMore)


State 180

   69 indexes: COMA indexedelem indexes .

    $default  reduce using rule 69 (indexes)


State 181

   57 call: LEFTPAR funcdef RIGHTPAR LEFTPAR elist . RIGHTPAR

    RIGHTPAR  shift, and go to state 191


State 182

   61 methodcall: FULLSTOP FULLSTOP IDENTIFIER LEFTPAR . elist RIGHTPAR

    error        shift, and go to state 1
    _LOCAL_      shift, and go to state 9
    _TRUE_       shift, and go to state 10
    _FALSE_      shift, and go to state 11
    NIL          shift, and go to state 12
    MINUS        shift, and go to state 13
    NOT          shift, and go to state 14
    PLUSPLUS     shift, and go to state 15
    MINUSMINUS   shift, and go to state 16
    LEFTSQUARE   shift, and go to state 18
    LEFTPAR      shift, and go to state 19
    DOUBLECOLON  shift, and go to state 21
    INTEGER      shift, and go to state 23
    REAL         shift, and go to state 24
    STRING       shift, and go to state 25
    IDENTIFIER   shift, and go to state 26

    RIGHTPAR  reduce using rule 63 (elist)

    expr        go to state 69
    term        go to state 31
    assignexpr  go to state 32
    primary     go to state 33
    lvalue      go to state 34
    tableItem   go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 192
    objectdef   go to state 38
    const       go to state 42


State 183

   94 idlistMore: COMA IDENTIFIER . idlistMore

    COMA  shift, and go to state 168

    $default  reduce using rule 95 (idlistMore)

    idlistMore  go to state 193


State 184

   79 funcargs: LEFTPAR idlist $@1 RIGHTPAR .

    $default  reduce using rule 79 (funcargs)


State 185

   74 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend .

    $default  reduce using rule 74 (funcdef)


State 186

   81 funcbody: $@2 block .

    $default  reduce using rule 81 (funcbody)


State 187

  104 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 104 (loopstmt)


State 188

  108 forstmt: forprefix N elist RIGHTPAR N . loopstmt N

    $default  reduce using rule 102 (loopstart)

    loopstart  go to state 152
    loopstmt   go to state 194


State 189

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . GREATER expr
   23     | expr . GREATER_EQUAL expr
   24     | expr . LESS expr
   25     | expr . LESS_EQUAL expr
   26     | expr . EQUAL expr
   27     | expr . NOTEQUAL expr
   28     | expr . AND expr
   29     | expr . OR expr
  109 forprefix: FOR LEFTPAR elist SEMICOLON M expr . SEMICOLON

    PLUS           shift, and go to state 78
    MINUS          shift, and go to state 79
    MUL            shift, and go to state 80
    DIV            shift, and go to state 81
    MOD            shift, and go to state 82
    EQUAL          shift, and go to state 83
    NOTEQUAL       shift, and go to state 84
    OR             shift, and go to state 85
    AND            shift, and go to state 86
    GREATER        shift, and go to state 87
    LESS           shift, and go to state 88
    GREATER_EQUAL  shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90
    SEMICOLON      shift, and go to state 195


State 190

   71 indexedelem: LEFTBRACKET expr COLON expr RIGHTBRACKET .

    $default  reduce using rule 71 (indexedelem)


State 191

   57 call: LEFTPAR funcdef RIGHTPAR LEFTPAR elist RIGHTPAR .

    $default  reduce using rule 57 (call)


State 192

   61 methodcall: FULLSTOP FULLSTOP IDENTIFIER LEFTPAR elist . RIGHTPAR

    RIGHTPAR  shift, and go to state 196


State 193

   94 idlistMore: COMA IDENTIFIER idlistMore .

    $default  reduce using rule 94 (idlistMore)


State 194

  108 forstmt: forprefix N elist RIGHTPAR N loopstmt . N

    $default  reduce using rule 100 (N)

    N  go to state 197


State 195

  109 forprefix: FOR LEFTPAR elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 109 (forprefix)


State 196

   61 methodcall: FULLSTOP FULLSTOP IDENTIFIER LEFTPAR elist RIGHTPAR .

    $default  reduce using rule 61 (methodcall)


State 197

  108 forstmt: forprefix N elist RIGHTPAR N loopstmt N .

    $default  reduce using rule 108 (forstmt)
